{'dataset': 'fungi', 'attributes': 'fungi', 'cluster_feature_method': 'linear', 'model_type': 'clip', 'model_size': 'ViT-B/32', 'mahalanobis': True, 'division_power': 2, 'linear_epochs': 50, 'reinit': False, 'num_attributes': 4, 'seed': 1, 'lr': 0.001, 'batch_size': 4, 'epochs': 125, 'linear_model': ['linear', 'linear'], 'score_model': ['linear'], 'json_file': '/export/home/ra79nod/proj/LM4CV_similarity/data/fungi/split_zhou_Fungi.json', 'ROOT': '/export/group/datasets/microbiology/images_png', 'use_voting': False, 'with_attributes': True, 'evaluate_with_novel_classes': False, 'IMP_SAMP_fix': True, 'use_patches': True, 'n_crops_per_image': 7, 'use_few_shot': False, 'umap': True}
num_attributes:  4
300 images for base training.
300 images for base testing.
300 images for novel testing.
600 images for all testing.
base_classes [0, 1, 4]
novel_classes [2, 3, 5]
Extract image features...
Extract image features...
Extract image features...
Extract image features...
self.features[idx] torch.Size([2100, 512])
self.targets[idx] torch.Size([2100])
self.features[idx] torch.Size([2100, 512])
self.targets[idx] torch.Size([2100])
self.features[idx] torch.Size([2100, 512])
self.targets[idx] torch.Size([2100])
self.features[idx] torch.Size([4200, 512])
self.targets[idx] torch.Size([4200])
mahalanobis:
Epoch [0], Best accuracy: 33.333335876464844, Last accuracy: 33.333335876464844
Epoch [10], Best accuracy: 50.80952453613281, Last accuracy: 50.80952453613281
Epoch [20], Best accuracy: 53.42857360839844, Last accuracy: 50.80952453613281
Epoch [30], Best accuracy: 57.0, Last accuracy: 54.95238494873047
Epoch [40], Best accuracy: 57.0, Last accuracy: 49.76190185546875
selected_attributions: ['cell membranes are thin and continuous', 'mycelium growth, branching structures, no compound effect', 'clumped masses with irregular borders', 'irregularly shaped, budding yeast cells']
300 images for base training.
300 images for base testing.
300 images for novel testing.
600 images for all testing.
base_classes [0, 1, 4]
novel_classes [2, 3, 5]
Extract image features...
Extract image features...
Extract image features...
Extract image features...
self.features[idx] torch.Size([2100, 512])
self.targets[idx] torch.Size([2100])
self.features[idx] torch.Size([2100, 512])
self.targets[idx] torch.Size([2100])
self.features[idx] torch.Size([2100, 512])
self.targets[idx] torch.Size([2100])
self.features[idx] torch.Size([4200, 512])
self.targets[idx] torch.Size([4200])
norm_embedding torch.Size([4200, 4])
similarity_matrix torch.Size([4200, 4200])
retrieval_results torch.Size([4200, 1])
Accuracy: 0.565952380952381
eachclass_accuracy: {0: 0.5085714285714286, 1: 0.5257142857142857, 2: 0.6342857142857142, 3: 0.7071428571428572, 4: 0.5128571428571429, 5: 0.5071428571428571}
Total number of test samples: 4200
embeddings_tensor torch.Size([700, 512])
norm_embeddings_tensor torch.Size([700, 512])
embeddings_tensor torch.Size([700, 512])
norm_embeddings_tensor torch.Size([700, 512])
embeddings_tensor torch.Size([700, 512])
norm_embeddings_tensor torch.Size([700, 512])
embeddings_tensor torch.Size([700, 512])
norm_embeddings_tensor torch.Size([700, 512])
embeddings_tensor torch.Size([700, 512])
norm_embeddings_tensor torch.Size([700, 512])
embeddings_tensor torch.Size([700, 512])
norm_embeddings_tensor torch.Size([700, 512])
label_to_avg_imagewithattributes torch.Size([4])
label_to_avg_imagewithattributes torch.Size([4])
label_to_avg_imagewithattributes torch.Size([4])
label_to_avg_imagewithattributes torch.Size([4])
label_to_avg_imagewithattributes torch.Size([4])
label_to_avg_imagewithattributes torch.Size([4])
top_indices tensor([0])
top_indices tensor([0])
top_indices tensor([0])
top_indices tensor([3])
top_indices tensor([0])
top_indices tensor([0])
{0: (tensor([0.2890]), ['cell membranes are thin and continuous']), 1: (tensor([0.2894]), ['cell membranes are thin and continuous']), 2: (tensor([0.2880]), ['cell membranes are thin and continuous']), 3: (tensor([0.2810]), ['irregularly shaped, budding yeast cells']), 4: (tensor([0.2946]), ['cell membranes are thin and continuous']), 5: (tensor([0.2885]), ['cell membranes are thin and continuous'])}
imagewithattributes_embeddings torch.Size([4200, 4])
random_state_value 4618
